{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Automata APP\\\\frontend\\\\src\\\\components\\\\SimulationResult.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationResult = ({\n  automaton,\n  inputString\n}) => {\n  _s();\n  const [result, setResult] = useState(null);\n  const [currentState, setCurrentState] = useState(automaton.startState);\n  const simulateAutomaton = () => {\n    let state = currentState;\n    for (let i = 0; i < inputString.length; i++) {\n      const input = inputString[i];\n      const transition = automaton.transitions.find(t => t.from === state && t.input === input);\n      if (transition) {\n        state = transition.to;\n      } else {\n        setResult('Rejected');\n        return;\n      }\n    }\n    setResult(automaton.acceptStates.includes(state) ? 'Accepted' : 'Rejected');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simulation Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current State: \", currentState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Input String: \", inputString]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: simulateAutomaton,\n      children: \"Simulate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationResult, \"M747r1hvLWI/WnwXyVOIJwqg0to=\");\n_c = SimulationResult;\nexport default SimulationResult;\nvar _c;\n$RefreshReg$(_c, \"SimulationResult\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SimulationResult","automaton","inputString","_s","result","setResult","currentState","setCurrentState","startState","simulateAutomaton","state","i","length","input","transition","transitions","find","t","from","to","acceptStates","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Automata APP/frontend/src/components/SimulationResult.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SimulationResult = ({ automaton, inputString }) => {\r\n  const [result, setResult] = useState(null);\r\n  const [currentState, setCurrentState] = useState(automaton.startState);\r\n\r\n  const simulateAutomaton = () => {\r\n    let state = currentState;\r\n    for (let i = 0; i < inputString.length; i++) {\r\n      const input = inputString[i];\r\n      const transition = automaton.transitions.find(\r\n        (t) => t.from === state && t.input === input\r\n      );\r\n      if (transition) {\r\n        state = transition.to;\r\n      } else {\r\n        setResult('Rejected');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setResult(automaton.acceptStates.includes(state) ? 'Accepted' : 'Rejected');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulation Result</h2>\r\n      <p>Current State: {currentState}</p>\r\n      <p>Input String: {inputString}</p>\r\n      <button onClick={simulateAutomaton}>Simulate</button>\r\n      {result && <p>Result: {result}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulationResult;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAACI,SAAS,CAACO,UAAU,CAAC;EAEtE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIC,KAAK,GAAGJ,YAAY;IACxB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,WAAW,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MAC3C,MAAME,KAAK,GAAGX,WAAW,CAACS,CAAC,CAAC;MAC5B,MAAMG,UAAU,GAAGb,SAAS,CAACc,WAAW,CAACC,IAAI,CAC1CC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKR,KAAK,IAAIO,CAAC,CAACJ,KAAK,KAAKA,KACzC,CAAC;MACD,IAAIC,UAAU,EAAE;QACdJ,KAAK,GAAGI,UAAU,CAACK,EAAE;MACvB,CAAC,MAAM;QACLd,SAAS,CAAC,UAAU,CAAC;QACrB;MACF;IACF;IAEAA,SAAS,CAACJ,SAAS,CAACmB,YAAY,CAACC,QAAQ,CAACX,KAAK,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC;EAC7E,CAAC;EAED,oBACEX,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3B,OAAA;MAAAuB,QAAA,GAAG,iBAAe,EAAChB,YAAY;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC3B,OAAA;MAAAuB,QAAA,GAAG,gBAAc,EAACpB,WAAW;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC3B,OAAA;MAAQ4B,OAAO,EAAElB,iBAAkB;MAAAa,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDtB,MAAM,iBAAIL,OAAA;MAAAuB,QAAA,GAAG,UAAQ,EAAClB,MAAM;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACvB,EAAA,CA/BIH,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAiCtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}