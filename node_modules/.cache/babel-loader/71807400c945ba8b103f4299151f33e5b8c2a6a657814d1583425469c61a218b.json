{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Automata APP\\\\frontend\\\\src\\\\components\\\\AutomatonInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutomatonInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [type, setType] = useState('DFA'); // Default to DFA\n  const [states, setStates] = useState('');\n  const [alphabet, setAlphabet] = useState('');\n  const [transitions, setTransitions] = useState('');\n  const [startState, setStartState] = useState('');\n  const [acceptStates, setAcceptStates] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const parsedStates = states.split(',').map(s => s.trim());\n    const parsedAlphabet = alphabet.split(',').map(s => s.trim());\n    const parsedTransitions = transitions.split(';').map(t => {\n      const [from, input, to] = t.split(',').map(s => s.trim());\n      return {\n        from,\n        input,\n        to\n      };\n    });\n    const parsedAcceptStates = acceptStates.split(',').map(s => s.trim());\n\n    // Create the automaton object\n    const automaton = {\n      type,\n      states: parsedStates,\n      alphabet: parsedAlphabet,\n      transitions: parsedTransitions,\n      startState,\n      acceptStates: parsedAcceptStates\n    };\n    onSubmit(automaton); // Send automaton to the parent component (e.g., App)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Automaton Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type (DFA/NFA):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: type,\n          onChange: e => setType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"States (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: states,\n          onChange: e => setStates(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Alphabet (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: alphabet,\n          onChange: e => setAlphabet(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transitions (format: from,input,to;):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: transitions,\n          onChange: e => setTransitions(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: startState,\n          onChange: e => setStartState(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Accept States (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: acceptStates,\n          onChange: e => setAcceptStates(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Automaton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AutomatonInput, \"YTf6dcSaQb3uniTz3rVV4sDGVKU=\");\n_c = AutomatonInput;\nexport default AutomatonInput;\nvar _c;\n$RefreshReg$(_c, \"AutomatonInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AutomatonInput","onSubmit","_s","type","setType","states","setStates","alphabet","setAlphabet","transitions","setTransitions","startState","setStartState","acceptStates","setAcceptStates","handleSubmit","e","preventDefault","parsedStates","split","map","s","trim","parsedAlphabet","parsedTransitions","t","from","input","to","parsedAcceptStates","automaton","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Automata APP/frontend/src/components/AutomatonInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AutomatonInput = ({ onSubmit }) => {\r\n  const [type, setType] = useState('DFA'); // Default to DFA\r\n  const [states, setStates] = useState('');\r\n  const [alphabet, setAlphabet] = useState('');\r\n  const [transitions, setTransitions] = useState('');\r\n  const [startState, setStartState] = useState('');\r\n  const [acceptStates, setAcceptStates] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const parsedStates = states.split(',').map((s) => s.trim());\r\n    const parsedAlphabet = alphabet.split(',').map((s) => s.trim());\r\n    const parsedTransitions = transitions\r\n      .split(';')\r\n      .map((t) => {\r\n        const [from, input, to] = t.split(',').map((s) => s.trim());\r\n        return { from, input, to };\r\n      });\r\n    const parsedAcceptStates = acceptStates.split(',').map((s) => s.trim());\r\n\r\n    // Create the automaton object\r\n    const automaton = {\r\n      type,\r\n      states: parsedStates,\r\n      alphabet: parsedAlphabet,\r\n      transitions: parsedTransitions,\r\n      startState,\r\n      acceptStates: parsedAcceptStates,\r\n    };\r\n\r\n    onSubmit(automaton); // Send automaton to the parent component (e.g., App)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Automaton Input</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Type (DFA/NFA):</label>\r\n          <input type=\"text\" value={type} onChange={(e) => setType(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>States (comma separated):</label>\r\n          <input type=\"text\" value={states} onChange={(e) => setStates(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Alphabet (comma separated):</label>\r\n          <input type=\"text\" value={alphabet} onChange={(e) => setAlphabet(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Transitions (format: from,input,to;):</label>\r\n          <input type=\"text\" value={transitions} onChange={(e) => setTransitions(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Start State:</label>\r\n          <input type=\"text\" value={startState} onChange={(e) => setStartState(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Accept States (comma separated):</label>\r\n          <input type=\"text\" value={acceptStates} onChange={(e) => setAcceptStates(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Submit Automaton</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutomatonInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}