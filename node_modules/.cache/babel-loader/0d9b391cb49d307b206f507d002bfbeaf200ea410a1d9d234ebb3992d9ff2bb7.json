{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Automata APP\\\\frontend\\\\src\\\\components\\\\AutomatonInput.js\",\n  _s = $RefreshSig$();\n// AutomatonInput.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutomatonInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [type, setType] = useState('DFA'); // Default to DFA\n  const [states, setStates] = useState('');\n  const [alphabet, setAlphabet] = useState('');\n  const [transitions, setTransitions] = useState('');\n  const [startState, setStartState] = useState('');\n  const [acceptStates, setAcceptStates] = useState('');\n  const [inputStrings, setInputStrings] = useState(''); // Added for multiple input strings\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Input validation\n    if (!states || !alphabet || !transitions || !startState || !acceptStates) {\n      alert('Please fill out all fields.');\n      return;\n    }\n    const parsedStates = states.split(',').map(s => s.trim());\n    const parsedAlphabet = alphabet.split(',').map(s => s.trim());\n    const parsedTransitions = transitions.split(';').map(t => {\n      const [from, input, to] = t.split(',').map(s => s.trim());\n      return {\n        from,\n        input,\n        to\n      };\n    });\n    const parsedAcceptStates = acceptStates.split(',').map(s => s.trim());\n    const parsedInputStrings = inputStrings.split(';').map(s => s.trim());\n\n    // Create the automaton object\n    const automaton = {\n      type,\n      states: parsedStates,\n      alphabet: parsedAlphabet,\n      transitions: parsedTransitions,\n      startState,\n      acceptStates: parsedAcceptStates,\n      inputStrings: parsedInputStrings // Pass input strings for simulation\n    };\n    onSubmit(automaton); // Send automaton to the parent component\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Automaton Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type (DFA/NFA):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DFA\",\n            children: \"DFA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"NFA\",\n            children: \"NFA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"States (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: states,\n          onChange: e => setStates(e.target.value),\n          placeholder: \"e.g., q0, q1, q2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Alphabet (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: alphabet,\n          onChange: e => setAlphabet(e.target.value),\n          placeholder: \"e.g., a, b, c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transitions (format: from,input,to;):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: transitions,\n          onChange: e => setTransitions(e.target.value),\n          placeholder: \"e.g., q0,a,q1; q1,b,q2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: startState,\n          onChange: e => setStartState(e.target.value),\n          placeholder: \"e.g., q0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Accept States (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: acceptStates,\n          onChange: e => setAcceptStates(e.target.value),\n          placeholder: \"e.g., q2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Automaton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AutomatonInput, \"q4MMTP2EsYyohweGIDIKgPiLe1A=\");\n_c = AutomatonInput;\nexport default AutomatonInput;\nvar _c;\n$RefreshReg$(_c, \"AutomatonInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AutomatonInput","onSubmit","_s","type","setType","states","setStates","alphabet","setAlphabet","transitions","setTransitions","startState","setStartState","acceptStates","setAcceptStates","inputStrings","setInputStrings","handleSubmit","e","preventDefault","alert","parsedStates","split","map","s","trim","parsedAlphabet","parsedTransitions","t","from","input","to","parsedAcceptStates","parsedInputStrings","automaton","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Automata APP/frontend/src/components/AutomatonInput.js"],"sourcesContent":["// AutomatonInput.js\r\nimport React, { useState } from 'react';\r\n\r\nconst AutomatonInput = ({ onSubmit }) => {\r\n  const [type, setType] = useState('DFA'); // Default to DFA\r\n  const [states, setStates] = useState('');\r\n  const [alphabet, setAlphabet] = useState('');\r\n  const [transitions, setTransitions] = useState('');\r\n  const [startState, setStartState] = useState('');\r\n  const [acceptStates, setAcceptStates] = useState('');\r\n  const [inputStrings, setInputStrings] = useState(''); // Added for multiple input strings\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Input validation\r\n    if (!states || !alphabet || !transitions || !startState || !acceptStates) {\r\n      alert('Please fill out all fields.');\r\n      return;\r\n    }\r\n\r\n    const parsedStates = states.split(',').map((s) => s.trim());\r\n    const parsedAlphabet = alphabet.split(',').map((s) => s.trim());\r\n    const parsedTransitions = transitions\r\n      .split(';')\r\n      .map((t) => {\r\n        const [from, input, to] = t.split(',').map((s) => s.trim());\r\n        return { from, input, to };\r\n      });\r\n    const parsedAcceptStates = acceptStates.split(',').map((s) => s.trim());\r\n    const parsedInputStrings = inputStrings.split(';').map((s) => s.trim());\r\n\r\n    // Create the automaton object\r\n    const automaton = {\r\n      type,\r\n      states: parsedStates,\r\n      alphabet: parsedAlphabet,\r\n      transitions: parsedTransitions,\r\n      startState,\r\n      acceptStates: parsedAcceptStates,\r\n      inputStrings: parsedInputStrings, // Pass input strings for simulation\r\n    };\r\n\r\n    onSubmit(automaton); // Send automaton to the parent component\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Automaton Input</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Type (DFA/NFA):</label>\r\n          <select value={type} onChange={(e) => setType(e.target.value)}>\r\n            <option value=\"DFA\">DFA</option>\r\n            <option value=\"NFA\">NFA</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>States (comma separated):</label>\r\n          <input\r\n            type=\"text\"\r\n            value={states}\r\n            onChange={(e) => setStates(e.target.value)}\r\n            placeholder=\"e.g., q0, q1, q2\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Alphabet (comma separated):</label>\r\n          <input\r\n            type=\"text\"\r\n            value={alphabet}\r\n            onChange={(e) => setAlphabet(e.target.value)}\r\n            placeholder=\"e.g., a, b, c\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Transitions (format: from,input,to;):</label>\r\n          <input\r\n            type=\"text\"\r\n            value={transitions}\r\n            onChange={(e) => setTransitions(e.target.value)}\r\n            placeholder=\"e.g., q0,a,q1; q1,b,q2\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Start State:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={startState}\r\n            onChange={(e) => setStartState(e.target.value)}\r\n            placeholder=\"e.g., q0\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Accept States (comma separated):</label>\r\n          <input\r\n            type=\"text\"\r\n            value={acceptStates}\r\n            onChange={(e) => setAcceptStates(e.target.value)}\r\n            placeholder=\"e.g., q2\"\r\n          />\r\n        </div>\r\n       \r\n        <button type=\"submit\">Submit Automaton</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutomatonInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}