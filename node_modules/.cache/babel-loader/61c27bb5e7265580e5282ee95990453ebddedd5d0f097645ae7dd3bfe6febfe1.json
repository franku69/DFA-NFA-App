{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Automata APP\\\\frontend\\\\src\\\\components\\\\SimulationResult.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationResult = ({\n  automaton,\n  inputString\n}) => {\n  _s();\n  const [result, setResult] = useState(null);\n  const [currentState, setCurrentState] = useState(automaton.startState);\n  const [inputIndex, setInputIndex] = useState(0);\n  const simulateStep = () => {\n    if (inputIndex >= inputString.length) {\n      setResult(automaton.acceptStates.includes(currentState) ? 'Accepted' : 'Rejected');\n      return;\n    }\n    const input = inputString[inputIndex];\n    const transition = automaton.transitions.find(t => t.from === currentState && t.input === input);\n    if (transition) {\n      setCurrentState(transition.to);\n      setInputIndex(inputIndex + 1);\n    } else {\n      setResult('Rejected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simulation Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current State: \", currentState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Input String: \", inputString]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: simulateStep,\n      children: \"Next Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), inputIndex === inputString.length && result && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationResult, \"PVCqpuIWcXx21+SwIcVftJ6QTpY=\");\n_c = SimulationResult;\nexport default SimulationResult;\nvar _c;\n$RefreshReg$(_c, \"SimulationResult\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SimulationResult","automaton","inputString","_s","result","setResult","currentState","setCurrentState","startState","inputIndex","setInputIndex","simulateStep","length","acceptStates","includes","input","transition","transitions","find","t","from","to","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Automata APP/frontend/src/components/SimulationResult.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SimulationResult = ({ automaton, inputString }) => {\r\n  const [result, setResult] = useState(null);\r\n  const [currentState, setCurrentState] = useState(automaton.startState);\r\n  const [inputIndex, setInputIndex] = useState(0);\r\n\r\n  const simulateStep = () => {\r\n    if (inputIndex >= inputString.length) {\r\n      setResult(automaton.acceptStates.includes(currentState) ? 'Accepted' : 'Rejected');\r\n      return;\r\n    }\r\n\r\n    const input = inputString[inputIndex];\r\n    const transition = automaton.transitions.find(\r\n      (t) => t.from === currentState && t.input === input\r\n    );\r\n\r\n    if (transition) {\r\n      setCurrentState(transition.to);\r\n      setInputIndex(inputIndex + 1);\r\n    } else {\r\n      setResult('Rejected');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulation Result</h2>\r\n      <p>Current State: {currentState}</p>\r\n      <p>Input String: {inputString}</p>\r\n      <button onClick={simulateStep}>Next Step</button>\r\n      {inputIndex === inputString.length && result && (\r\n        <p>Result: {result}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulationResult;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAACI,SAAS,CAACO,UAAU,CAAC;EACtE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIF,UAAU,IAAIP,WAAW,CAACU,MAAM,EAAE;MACpCP,SAAS,CAACJ,SAAS,CAACY,YAAY,CAACC,QAAQ,CAACR,YAAY,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC;MAClF;IACF;IAEA,MAAMS,KAAK,GAAGb,WAAW,CAACO,UAAU,CAAC;IACrC,MAAMO,UAAU,GAAGf,SAAS,CAACgB,WAAW,CAACC,IAAI,CAC1CC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKd,YAAY,IAAIa,CAAC,CAACJ,KAAK,KAAKA,KAChD,CAAC;IAED,IAAIC,UAAU,EAAE;MACdT,eAAe,CAACS,UAAU,CAACK,EAAE,CAAC;MAC9BX,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM;MACLJ,SAAS,CAAC,UAAU,CAAC;IACvB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3B,OAAA;MAAAuB,QAAA,GAAG,iBAAe,EAAChB,YAAY;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC3B,OAAA;MAAAuB,QAAA,GAAG,gBAAc,EAACpB,WAAW;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC3B,OAAA;MAAQ4B,OAAO,EAAEhB,YAAa;MAAAW,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChDjB,UAAU,KAAKP,WAAW,CAACU,MAAM,IAAIR,MAAM,iBAC1CL,OAAA;MAAAuB,QAAA,GAAG,UAAQ,EAAClB,MAAM;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCIH,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAqCtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}